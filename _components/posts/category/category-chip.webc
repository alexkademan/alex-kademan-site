<script webc:type="js">
	let result = '';
	const postsPath = '/posts/';

	if (this.categoryName === 'All') {
		const current = this.$data.page.url;
		const aria = current === postsPath ? ' aria-current="page"' : '';

		result = `<a href="${postsPath}"${aria}>${this.categoryName}</a>`;
	} else {
		if (!this.categoryName) {
			throw new Error('Error - <category> - @name is required');
		}

		const category = this.$data.categories[this.categoryName];

		if (!category) {
			// throw new Error('Error - <category> - category not found');
			throw new Error('Error - category not found');
		}

		if (this.link === 'true') {
			// console.log('this.link is true...');
			const current = this.$data.page.url;
			const path = `${postsPath}${this.categoryName}/`;
			const aria = current === path ? ' aria-current="page"' : '';
			result = `<a href="${path}"${aria}>${category.name}</a>`;
		}
	}
	result;
</script>

<style webc:scoped>
	:host:has(a) {
		display: flex;
		flex-direction: row;
		align-items: center;
		align-self: flex-start;
		column-gap: 2em;
	}

	a {
		text-decoration: none;
		text-transform: uppercase;
		font-size: .75em;
		background-color: transparent;
		
		font-family: lato-black;
		letter-spacing: .2em;
		line-height: 1.2em;

		color: var(--deep-slate-blue);
		color: var(--terra-cotta);
		border: 1px var(--terra-cotta) solid;
		
		padding: .125em .5em;
		border-radius: .175em;
		transition: all .2s ease-out;

		&:is(:hover, :focus-visible) {
			background-color: var(--terra-cotta);
			border-color: var(--terra-cotta);
			color: white;
		}

		&[aria-current='page'] {
			background-color: var(--terra-cotta);			
			color: white;
		}
	}


</style>
